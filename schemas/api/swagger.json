{
  "openapi": "3.0.1",
  "info": {
    "title": "SkyApi",
    "description": "Notes: PET, RUNE and POTION item tags (somtimes called ids) are expanded to include the type, eg PET_LION.<br> All other Tags match with from hypixel and can be found via the search endpoint.",
    "version": "v1"
  },
  "paths": {
    "/api/auction/{auctionUuid}": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Retrieve details of a specific auction",
        "parameters": [
          {
            "name": "auctionUuid",
            "in": "path",
            "description": "The uuid of the auction you want the details for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColorSaveAuction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColorSaveAuction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColorSaveAuction"
                }
              }
            }
          }
        }
      }
    },
    "/api/auction/{auctionUuid}/uid": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Retrieve the uid of an auction (mainly a helper to get the lookup id for another service)",
        "parameters": [
          {
            "name": "auctionUuid",
            "in": "path",
            "description": "The uuid of the auction you want the details for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/tag/{itemTag}/active/bin": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Get the 10 (or how many are available) lowest bins",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The itemTag to get bins for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filters for the auctions",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/tag/{itemTag}/sold": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Get a batch of 1000 auctions that sold in the last week for any kind of processing.\r\nPlease credit us with providing data for whatever you are doing.\r\nYou can also manually request a review to get older data on the discord.",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The itemTag to get auctions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of auctions to get",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "how many auctions to get per page 1-1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaveAuction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/batch": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Batch raw item value export, requires token",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page of auctions to get",
            "schema": {
              "type": "string",
              "default": "last"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Secret token to access data",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/auctions/tag/{itemTag}/recent/overview": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Gets a preview of recent auctions useful in overviews",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The itemTag to get auctions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/tag/{itemTag}/active/overview": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Gets a preview of active auctions useful in overviews, available orderBy options \r\nHIGHEST_PRICE, LOWEST_PRICE (default), ENDING_SOON",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The itemTag to get auctions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionPreview"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/uid/{uid}/sold": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Gets all recorded past sells of an item with a specific uuid\r\nmeant for dupe detection",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "The Item uuid or just uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemSell"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemSell"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemSell"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/uids/sold": {
      "post": {
        "tags": [
          "Auctions"
        ],
        "summary": "Gets all recorded past sells of a batch of items by uuid\r\nmeant for dupe detection of whole inventories",
        "requestBody": {
          "description": "The Item uuid or just uid",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBatchLookup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBatchLookup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBatchLookup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBatchLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/active/uuid": {
      "post": {
        "tags": [
          "Auctions"
        ],
        "summary": "Checks an array of item uuids if they are active on the ah",
        "requestBody": {
          "description": "The list of uuids to check",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auctions/supply/low": {
      "get": {
        "tags": [
          "Auctions"
        ],
        "summary": "Get items that are in low supply",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplyElement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplyElement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplyElement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/{itemTag}/history/hour": {
      "get": {
        "tags": [
          "Bazaar"
        ],
        "summary": "Gets the history data for display in a graph for one hour ( in intervalls of 10 seconds)",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "What item to get data for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/{itemTag}/history/day": {
      "get": {
        "tags": [
          "Bazaar"
        ],
        "summary": "Gets the history data for display in a graph for one day ( in intervalls of 5 minutes)",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "What item to get data for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/{itemTag}/history/week": {
      "get": {
        "tags": [
          "Bazaar"
        ],
        "summary": "Gets the history data for display in a graph for one week ( in intervalls of 2 hours)",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "What item to get data for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/{itemTag}/history": {
      "get": {
        "tags": [
          "Bazaar"
        ],
        "summary": "Gets the history data for display in a graph",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "What item to get data for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/{itemTag}/snapshot": {
      "get": {
        "tags": [
          "Bazaar"
        ],
        "summary": "Gets a snapshot of a specific item at a specific time",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The search term to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Whattime to retrieve the information at (defaults to now)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageQuickStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageQuickStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageQuickStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/craft/profit": {
      "get": {
        "tags": [
          "Crafting"
        ],
        "summary": "Craft flips",
        "parameters": [
          {
            "name": "player",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfitableCraft"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfitableCraft"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfitableCraft"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/craft/recipe/{itemTag}": {
      "get": {
        "tags": [
          "Crafting"
        ],
        "summary": "Returns the crafting recipe for some item",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/craft/api/craft": {
      "get": {
        "tags": [
          "Crafting"
        ],
        "summary": "Returns the crafting recipe for some item",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/proxy": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Endpoint to upload proxied data",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/playerName": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Accepts player name based auction hints",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Int64ValueTuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Int64ValueTuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Int64ValueTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/playerNames": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Accepts player name based auction hints",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32Int64ValueTuple"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32Int64ValueTuple"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32Int64ValueTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Filter": {
      "post": {
        "tags": [
          "Filter"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/flip/update/when": {
      "get": {
        "tags": [
          "Flip"
        ],
        "summary": "The last time an update was loaded (cached for 30min)\r\nYou should only look at the second part",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/flip/settings/options": {
      "get": {
        "tags": [
          "Flip"
        ],
        "summary": "Shows you the available settings options for the socket comand subFlip,\r\nDoesn't currently actually do anything.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSettings"
                }
              }
            }
          }
        }
      }
    },
    "/api/flip/track/purchase/{auctionId}": {
      "post": {
        "tags": [
          "Flip"
        ],
        "summary": "Callback for external flip finders to be included in tracking",
        "parameters": [
          {
            "name": "auctionId",
            "in": "path",
            "description": "Id of found and purchased auction",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finder",
            "in": "query",
            "description": "Identifier of finder",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "The uuid of the player",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Sugested target price",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "timeStamp",
            "in": "query",
            "description": "Unix millisecond timestamp when the flip was found",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/flip/track/found/{auctionId}": {
      "post": {
        "tags": [
          "Flip"
        ],
        "summary": "Callback for external flip finders to be included in tracking.",
        "parameters": [
          {
            "name": "auctionId",
            "in": "path",
            "description": "The id of the found auction",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finder",
            "in": "query",
            "description": "Identifier of finder",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Suggested target price",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "timeStamp",
            "in": "query",
            "description": "Unix millisecond timestamp when the flip was found",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/flip/stats/player/{playerUuid}": {
      "get": {
        "tags": [
          "Flip"
        ],
        "summary": "Get flips stats for player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Uuid of player to get stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 7
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              }
            }
          }
        }
      }
    },
    "/api/flip/stats/player/{playerUuid}/hour": {
      "get": {
        "tags": [
          "Flip"
        ],
        "summary": "Get flips stats for player for the last hour (faster)",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Uuid of player",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlipSumary"
                }
              }
            }
          }
        }
      }
    },
    "/api/flip/stats/finder/{finderName}": {
      "get": {
        "tags": [
          "Flip"
        ],
        "summary": "Get flips stats for one type of flip finder",
        "parameters": [
          {
            "name": "finderName",
            "in": "path",
            "description": "Uuid of player to get stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "The start time of flips to get (inclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "The end time of flips to get (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlipDetails"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlipDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlipDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items/bazaar/tags": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "A list of item tags (hypixel ids) that are tradeable on bazaar\r\nThis gets updated once every hour",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get all item tags, names and wherever they are on ah or bazaar",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemMetadataElement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemMetadataElement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemMetadataElement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/items/names": {
      "post": {
        "tags": [
          "Item"
        ],
        "summary": "Batch lookup names for item tags",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{itemTag}/details": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Returns details about a specific item\r\nThis gets updated once every hour",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SkyblockItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkyblockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkyblockItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{itemTag}/similar": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Other items related to some tag",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemPreview"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemPreview"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemPreview"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kat/profit": {
      "get": {
        "tags": [
          "Kat"
        ],
        "summary": "Kat flips",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatFlip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatFlip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatFlip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kat/data": {
      "get": {
        "tags": [
          "Kat"
        ],
        "summary": "Raw data of upgrade cost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatUpgradeCost"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatUpgradeCost"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KatUpgradeCost"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mayor/{year}": {
      "get": {
        "tags": [
          "Mayor"
        ],
        "summary": "Return Election results for a specific year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelElectionPeriod"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelElectionPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelElectionPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/api/mayor": {
      "get": {
        "tags": [
          "Mayor"
        ],
        "summary": "Gets election data between two Timestamps",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start ISO 8601",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End eg. 2022-09-22T20:03:10.937Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelElectionPeriod"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelElectionPeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelElectionPeriod"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mod/commands": {
      "get": {
        "tags": [
          "Mod"
        ],
        "summary": "Returns a list of available server-side commands",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommandListEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommandListEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommandListEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mod/item/{uuid}": {
      "get": {
        "tags": [
          "Mod"
        ],
        "summary": "Returns extra information for an item",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/mod/description": {
      "post": {
        "tags": [
          "Mod"
        ],
        "summary": "Returns new descriptions for an array of items",
        "parameters": [
          {
            "name": "conId",
            "in": "header",
            "description": "(optional) Connection id of the calling mod to apply user settings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "(optional) The uuid of the calling player",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory data. The nbt encoded, ziped, base64 encoded fullInventoryNbt",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/mod/description/modifications": {
      "post": {
        "tags": [
          "Mod"
        ],
        "summary": "Returns a collection of modifications for each item passed",
        "parameters": [
          {
            "name": "conId",
            "in": "header",
            "description": "(optional) Connection id of the calling mod to apply user settings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "(optional) The uuid of the calling player",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory data. The nbt encoded, ziped, base64 encoded fullInventoryNbt",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DescModification"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DescModification"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DescModification"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/player/{playerUuid}/bids": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "The last 10 bids (with auction) a player did",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "The uuid of the player",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of auctions (another 10)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BidResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/player/{playerUuid}/auctions": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "The last 10 auctions a player created",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "The uuid of the player",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of auctions (another 10)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/player/{playerUuid}/name": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "The name for a given uuid",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "The uuid of the player",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Player"
        ],
        "summary": "The name for a given uuid",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "The uuid of the player",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/topup/options": {
      "get": {
        "tags": [
          "Premium"
        ],
        "summary": "Products to top up",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopUpProduct"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopUpProduct"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopUpProduct"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/topup/stripe/{productSlug}": {
      "post": {
        "tags": [
          "Premium"
        ],
        "summary": "Start a new topup session with stripe",
        "parameters": [
          {
            "name": "productSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/topup/paypal/{productSlug}": {
      "post": {
        "tags": [
          "Premium"
        ],
        "summary": "Start a new topup session with paypal",
        "parameters": [
          {
            "name": "productSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpArguments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/service/purchase": {
      "post": {
        "tags": [
          "Premium"
        ],
        "summary": "Purchase a service",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseArgs"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/premium/prices/adjusted": {
      "post": {
        "tags": [
          "Premium"
        ],
        "summary": "Get adjusted prices",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/premium/user/owns": {
      "post": {
        "tags": [
          "Premium"
        ],
        "summary": "Get adjusted prices",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Aggregated sumary of item prices for the 3 last days",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The item tag you want prices for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filter query",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSumary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSumary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSumary"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/bin": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the lowest bin by item type",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item to search for bin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BinResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BinResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/current": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the current (latest known) price for an item and available quantity, supports items from bazaar and ah",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "How many items to search for (and include in cost)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentPrice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentPrice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentPrice"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/history/day": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the price history for an item for the last 24 hours",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "filter query",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/history/week": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the price history for an item for the last 7 days",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "filter query",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/history/month": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the price history for an item for one month",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "filter query",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/item/price/{itemTag}/history/full": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Gets the price history for an item for all time",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "description": "The tag of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AveragePrice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/filter/options": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Returns all available filters with all available options",
        "parameters": [
          {
            "name": "itemTag",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterOptions"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterOptions"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterOptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/price/nbt": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Returns price estimations for nbt data (for in game mods) \r\nNOTE: THIS WILL BE A PAID FEATURE IN THE FUTURE",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceEstimate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceEstimate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceEstimate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bazaar/item/history/{itemTag}/status": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Returns bazaar history",
        "parameters": [
          {
            "name": "itemTag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/referral/referred/by": {
      "post": {
        "tags": [
          "Referral"
        ],
        "summary": "tells the backend that the user was referred by someone",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferredBy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferredBy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferredBy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferredBy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/referral/info": {
      "get": {
        "tags": [
          "Referral"
        ],
        "summary": "Returns ReferralCode and statistics for the user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/search/{searchVal}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Searches through all items, includes the rarity of items",
        "parameters": [
          {
            "name": "searchVal",
            "in": "path",
            "description": "The search term to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/{searchVal}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Full search, includes item types, items (by uuid), players, auctions and enchantments",
        "parameters": [
          {
            "name": "searchVal",
            "in": "path",
            "description": "The search term to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum amount of results to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/player/{playerName}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search player",
        "parameters": [
          {
            "name": "playerName",
            "in": "path",
            "description": "The player name to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/privacy": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the users privacy settings (requires google token)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update users privacy settings (requires google token)",
        "requestBody": {
          "description": "The new settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuctionPreview": {
        "type": "object",
        "properties": {
          "seller": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "playerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuctionResult": {
        "type": "object",
        "properties": {
          "auctionId": {
            "type": "string",
            "nullable": true
          },
          "highestBid": {
            "type": "integer",
            "format": "int64"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "startingBid": {
            "type": "integer",
            "format": "int64"
          },
          "bin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AveragePrice": {
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "float"
          },
          "max": {
            "type": "number",
            "format": "float"
          },
          "avg": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BidResult": {
        "type": "object",
        "properties": {
          "highestOwnBid": {
            "type": "integer",
            "description": "The highest bid the requesting player has made",
            "format": "int64"
          },
          "auctionId": {
            "type": "string",
            "nullable": true
          },
          "highestBid": {
            "type": "integer",
            "format": "int64"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "startingBid": {
            "type": "integer",
            "format": "int64"
          },
          "bin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Paginated bid result for player overview"
      },
      "BinResponse": {
        "type": "object",
        "properties": {
          "lowest": {
            "type": "integer",
            "description": "The lowest bin price",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "description": "The lowest bin auction uuid",
            "nullable": true
          },
          "secondLowest": {
            "type": "integer",
            "description": "The price of the second lowest bin",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Lowest bin response"
      },
      "BuyOrder": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerUnit": {
            "type": "number",
            "format": "double"
          },
          "orders": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "enum": [
          "UNKNOWN",
          "WEAPON",
          "ARMOR",
          "ACCESSORIES",
          "CONSUMABLES",
          "BLOCKS",
          "MISC"
        ],
        "type": "string"
      },
      "ColorEnchant": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EnchantmentType"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ColorSaveAuction": {
        "type": "object",
        "properties": {
          "enchantments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorEnchant"
            },
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "startingBid": {
            "type": "integer",
            "format": "int64"
          },
          "tag": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "auctioneerId": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "coop": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "writeOnly": true
          },
          "coopMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UuId"
            },
            "nullable": true
          },
          "highestBidAmount": {
            "type": "integer",
            "format": "int64"
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBids"
            },
            "nullable": true
          },
          "anvilUses": {
            "type": "integer",
            "format": "int32"
          },
          "nbtData": {
            "$ref": "#/components/schemas/NbtData"
          },
          "itemCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reforge": {
            "$ref": "#/components/schemas/Reforge"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "tier": {
            "$ref": "#/components/schemas/Tier"
          },
          "bin": {
            "type": "boolean"
          },
          "flatNbt": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandListEntry": {
        "type": "object",
        "properties": {
          "subCommand": {
            "type": "string",
            "description": "The commands label. ie /cofl {this}",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The descriptive help text to display",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents help text for some command"
      },
      "CurrentPrice": {
        "type": "object",
        "properties": {
          "sell": {
            "type": "number",
            "format": "double"
          },
          "buy": {
            "type": "number",
            "format": "double"
          },
          "available": {
            "type": "integer",
            "format": "int32"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DescModification": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ModType"
          },
          "line": {
            "type": "integer",
            "description": "Extra field containing index to insert (int), or value to replace (string)",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "New value to add,insert, or replace something with",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object instructing minecraft mods how to modify the description"
      },
      "DescriptionField": {
        "enum": [
          "NONE",
          "LBIN",
          "LBIN_KEY",
          "MEDIAN",
          "MEDIAN_KEY",
          "VOLUME",
          "TAG",
          "CRAFT_COST",
          "BazaarBuy",
          "BazaarSell",
          "PRICE_PAID",
          "ITEM_KEY",
          "BAZAAR_COST"
        ],
        "type": "string"
      },
      "DescriptionSetting": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DescriptionField"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Enchantment": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EnchantmentType"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EnchantmentType": {
        "enum": [
          "unknown",
          "cleave",
          "critical",
          "cubism",
          "ender_slayer",
          "execute",
          "experience",
          "first_strike",
          "giant_killer",
          "impaling",
          "lethality",
          "life_steal",
          "luck",
          "scavenger",
          "thunderlord",
          "telekinesis",
          "vampirism",
          "venomous",
          "growth",
          "aiming",
          "dragon_hunter",
          "infinite_quiver",
          "piercing",
          "snipe",
          "harvesting",
          "rainbow",
          "smelting_touch",
          "angler",
          "blessing",
          "caster",
          "frail",
          "magnet",
          "spiked_hook",
          "bane_of_arthropods",
          "fire_aspect",
          "looting",
          "knockback",
          "sharpness",
          "smite",
          "aqua_affinity",
          "blast_protection",
          "depth_strider",
          "feather_falling",
          "fire_protection",
          "frost_walker",
          "projectile_protection",
          "protection",
          "respiration",
          "thorns",
          "flame",
          "power",
          "punch",
          "efficiency",
          "fortune",
          "silk_touch",
          "lure",
          "luck_of_the_sea",
          "true_protection",
          "sugar_rush",
          "replenish",
          "rejuvenate",
          "ultimate_bank",
          "ultimate_combo",
          "ultimate_jerry",
          "ultimate_last_stand",
          "ultimate_no_pain_no_gain",
          "ultimate_wisdom",
          "ultimate_wise",
          "expertise",
          "ultimate_chimera",
          "ultimate_rend",
          "overload",
          "ultimate_legion",
          "ultimate_swarm",
          "big_brain",
          "compact",
          "vicious",
          "counter_strike",
          "turbo_carrot",
          "turbo_cactus",
          "turbo_cane",
          "turbo_coco",
          "turbo_melon",
          "turbo_mushrooms",
          "turbo_pumpkin",
          "turbo_potato",
          "turbo_warts",
          "turbo_wheat",
          "chance",
          "PROSECUTE",
          "syphon",
          "respite",
          "thunderbolt",
          "titan_killer",
          "triple_strike",
          "ultimate_soul_eater",
          "ultimate_one_for_all",
          "None",
          "cultivating",
          "delicate",
          "mana_steal",
          "smarty_pants",
          "pristine",
          "ultimate_fatal_tempo",
          "ultimate_inferno",
          "charm",
          "corruption",
          "ferocious_mana",
          "strong_mana",
          "hardened_mana",
          "mana_vampire",
          "smoldering",
          "ultimate_duplex",
          "ultimate_flash",
          "hecatomb",
          "champion",
          "ultimate_habanero_tactics",
          "cayenne",
          "divine_gift",
          "piscary",
          "ultimate_bobbin_time",
          "tabasco",
          "prosperity",
          "sunder",
          "Any"
        ],
        "type": "string"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "trace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterOptions": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/FilterType"
          },
          "longType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterQuery": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "object",
            "nullable": true
          },
          "auction": {
            "$ref": "#/components/schemas/SaveAuction"
          }
        },
        "additionalProperties": false
      },
      "FilterType": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512
        ],
        "type": "integer",
        "format": "int32"
      },
      "FinderType": {
        "enum": [
          0,
          1,
          2,
          4,
          6,
          7,
          8,
          16,
          32,
          64,
          128
        ],
        "type": "integer",
        "format": "int32"
      },
      "FlipDetails": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemTag": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "pricePaid": {
            "type": "integer",
            "format": "int64"
          },
          "soldFor": {
            "type": "integer",
            "format": "int64"
          },
          "finder": {
            "$ref": "#/components/schemas/FinderType"
          },
          "uId": {
            "type": "integer",
            "format": "int64"
          },
          "originAuction": {
            "type": "string",
            "nullable": true
          },
          "soldAuction": {
            "type": "string",
            "nullable": true
          },
          "buyTime": {
            "type": "string",
            "format": "date-time"
          },
          "sellTime": {
            "type": "string",
            "format": "date-time"
          },
          "profit": {
            "type": "integer",
            "format": "int64"
          },
          "propertyChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyChange"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FlipSettings": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "object",
            "nullable": true
          },
          "blacklist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListEntry"
            },
            "nullable": true
          },
          "whitelist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListEntry"
            },
            "nullable": true
          },
          "lbin": {
            "type": "boolean"
          },
          "visibility": {
            "$ref": "#/components/schemas/VisibilitySettings"
          },
          "mod": {
            "$ref": "#/components/schemas/ModSettings"
          },
          "finders": {
            "$ref": "#/components/schemas/FinderType"
          },
          "fastMode": {
            "type": "boolean"
          },
          "changer": {
            "type": "string",
            "nullable": true
          },
          "onlyBin": {
            "type": "boolean"
          },
          "whitelistAftermain": {
            "type": "boolean"
          },
          "minProfit": {
            "type": "integer",
            "format": "int64"
          },
          "minProfitPercent": {
            "type": "integer",
            "format": "int32"
          },
          "minVolume": {
            "type": "number",
            "format": "double"
          },
          "maxCost": {
            "type": "integer",
            "format": "int64"
          },
          "lastChange": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FlipSumary": {
        "type": "object",
        "properties": {
          "flips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlipDetails"
            },
            "nullable": true
          },
          "totalProfit": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GraphResult": {
        "type": "object",
        "properties": {
          "maxBuy": {
            "type": "number",
            "format": "float"
          },
          "maxSell": {
            "type": "number",
            "format": "float"
          },
          "minBuy": {
            "type": "number",
            "format": "float"
          },
          "minSell": {
            "type": "number",
            "format": "float"
          },
          "buy": {
            "type": "number",
            "format": "double"
          },
          "sell": {
            "type": "number",
            "format": "double"
          },
          "sellVolume": {
            "type": "integer",
            "format": "int64"
          },
          "buyVolume": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "buyMovingWeek": {
            "type": "integer",
            "format": "int64"
          },
          "sellMovingWeek": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "cost": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Int32Int64ValueTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "integer",
            "format": "int32"
          },
          "item2": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "InventoryBatchLookup": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "playerId": {
            "type": "string",
            "nullable": true
          },
          "uuids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryData": {
        "type": "object",
        "properties": {
          "chestName": {
            "type": "string",
            "description": "The name of the chest",
            "nullable": true
          },
          "fullInventoryNbt": {
            "type": "string",
            "description": "Base64, gziped nbtdata of the inventory",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/DescriptionSetting"
          }
        },
        "additionalProperties": false,
        "description": "Representation of an inventory"
      },
      "ItemCategory": {
        "enum": [
          "UNKNOWN",
          "PET_ITEM",
          "SWORD",
          "CHESTPLATE",
          "HELMET",
          "REFORGE_STONE",
          "COSMETIC",
          "AXE",
          "LEGGINGS",
          "ACCESSORY",
          "BOW",
          "TRAVEL_SCROLL",
          "BOOTS",
          "HOE",
          "BAIT",
          "FISHING_ROD",
          "DUNGEON_PASS",
          "ARROW",
          "SPADE",
          "SHEARS",
          "PICKAXE",
          "ARROW_POISON",
          "WAND",
          "DRILL",
          "FISHING_WEAPON",
          "GAUNTLET",
          "FURNITURE",
          "GENERATOR",
          "MINION_SKIN",
          "PRIVATE_ISLAND",
          "ISLAND_CRYSTAL",
          "FRAGMENT",
          "SLAYER",
          "DUNGEON",
          "DUNGEON_ITEM",
          "SACK",
          "PORTAL",
          "DEEP_CAVERNS",
          "BACKPACK",
          "TALISMAN_ENRICHMENT",
          "THE_FISH",
          "PET",
          "PET_SKIN",
          "RUNE",
          "ArmorDye",
          "Vanilla",
          "NullNamed",
          "CLOAK",
          "NECKLACE",
          "BELT",
          "GLOVES",
          "BRACELET"
        ],
        "type": "string"
      },
      "ItemFlags": {
        "enum": [
          "NONE",
          "BAZAAR",
          "TRADEABLE",
          "AUCTION",
          "CRAFT",
          "GLOWING",
          "MUSEUM"
        ],
        "type": "string"
      },
      "ItemMetadataElement": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the element",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "description": "The hypixel tag of the item",
            "nullable": true
          },
          "flags": {
            "$ref": "#/components/schemas/ItemFlags"
          }
        },
        "additionalProperties": false,
        "description": "Item Metadata"
      },
      "ItemPreview": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemSell": {
        "type": "object",
        "properties": {
          "seller": {
            "type": "string",
            "description": "The minecraft account uuid that sold the item",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "The hypixel auction uuid for the item",
            "nullable": true
          },
          "buyer": {
            "type": "string",
            "description": "The minecraft account uuid that bought the item",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "When was the item sold",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup element for sold items"
      },
      "KatFlip": {
        "type": "object",
        "properties": {
          "volume": {
            "type": "number",
            "description": "24 hour sell volume",
            "format": "double"
          },
          "median": {
            "type": "integer",
            "description": "Median prie of the item",
            "format": "int64"
          },
          "upgradeCost": {
            "type": "number",
            "description": "The amount of coins the upgrade costs (excluding materials)",
            "format": "double",
            "readOnly": true
          },
          "materialCost": {
            "type": "number",
            "description": "The cost for materials at current bazaar/ah rate",
            "format": "double",
            "readOnly": true
          },
          "originAuction": {
            "type": "string",
            "description": "The auction to flip",
            "nullable": true
          },
          "coreData": {
            "$ref": "#/components/schemas/KatUpgradeCost"
          },
          "targetRarity": {
            "$ref": "#/components/schemas/Tier"
          },
          "profit": {
            "type": "number",
            "description": "The estimated profit the flip will genreate",
            "format": "double",
            "readOnly": true
          },
          "referenceAuction": {
            "type": "string",
            "description": "The reference auction used to estimate the profit (lowest bin of higher rarity)",
            "nullable": true
          },
          "purchaseCost": {
            "type": "integer",
            "description": "How much the starting bid of the auction is",
            "format": "int64",
            "readOnly": true
          },
          "originAuctionName": {
            "type": "string",
            "description": "The full name of the origin auction (cotnaining pet level)",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Kat pet rarity upgrade flip"
      },
      "KatUpgradeCost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the pet",
            "nullable": true
          },
          "baseRarity": {
            "$ref": "#/components/schemas/Tier"
          },
          "hours": {
            "type": "integer",
            "description": "Time it takes to upgrade",
            "format": "int32"
          },
          "cost": {
            "type": "integer",
            "description": "Base cost of coins it takes to do the upgrade",
            "format": "int32"
          },
          "material": {
            "type": "string",
            "description": "Material (if any) required to upgrade",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Amount of Coflnet.Sky.Api.Models.KatUpgradeCost.Material required to do the upgrade",
            "format": "int32"
          },
          "itemTag": {
            "type": "string",
            "description": "Coflnet Item tag for the Pet",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Information on requirements to upgrade a pet to another rarity"
      },
      "ListEntry": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "object",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModSettings": {
        "type": "object",
        "properties": {
          "justProfit": {
            "type": "boolean"
          },
          "soundOnFlip": {
            "type": "boolean"
          },
          "shortNumbers": {
            "type": "boolean"
          },
          "blockTenSecMsg": {
            "type": "boolean"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "chat": {
            "type": "boolean"
          },
          "countdown": {
            "type": "boolean"
          },
          "hideNoBestFlip": {
            "type": "boolean"
          },
          "timerX": {
            "type": "integer",
            "format": "int32"
          },
          "timerY": {
            "type": "integer",
            "format": "int32"
          },
          "timerSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "timerScale": {
            "type": "number",
            "format": "float"
          },
          "timerPrefix": {
            "type": "string",
            "nullable": true
          },
          "timerPrecision": {
            "type": "integer",
            "format": "int32"
          },
          "blockedMsg": {
            "type": "integer",
            "format": "int32"
          },
          "noAdjustToPurse": {
            "type": "boolean"
          },
          "noBedDelay": {
            "type": "boolean"
          },
          "streamerMode": {
            "type": "boolean"
          },
          "autoStartFlipper": {
            "type": "boolean"
          },
          "normalSoldFlips": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ModType": {
        "enum": [
          "NONE",
          "INSERT",
          "REPLACE",
          "APPEND",
          "DELETE"
        ],
        "type": "string",
        "description": "Defines the type of modification"
      },
      "ModelCandidate": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "perks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelPerk"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelElectionPeriod": {
        "type": "object",
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelCandidate"
            },
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "winner": {
            "$ref": "#/components/schemas/ModelCandidate"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModelPerk": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NbtData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OldRefInfo": {
        "type": "object",
        "properties": {
          "refId": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "receivedTime": {
            "type": "string",
            "format": "date-span"
          },
          "receivedHours": {
            "type": "integer",
            "format": "int32"
          },
          "bougthPremium": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OwnerShip": {
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PlayerResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "hitCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PriceEstimate": {
        "type": "object",
        "properties": {
          "lbin": {
            "type": "integer",
            "description": "The best matching lowest bin found on ah",
            "format": "int64"
          },
          "median": {
            "type": "integer",
            "description": "The best matching median sell price",
            "format": "int64"
          },
          "volume": {
            "type": "number",
            "description": "average 24 hour sell volume",
            "format": "float"
          },
          "lbinLink": {
            "type": "string",
            "description": "The link to best matching lbin",
            "nullable": true
          },
          "fastSell": {
            "type": "integer",
            "description": "Suggested price for selling withing 5 minutes",
            "format": "int64"
          },
          "medianKey": {
            "type": "string",
            "description": "The key of the median price",
            "nullable": true
          },
          "itemKey": {
            "type": "string",
            "description": "The key of the",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceSumary": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "median": {
            "type": "integer",
            "format": "int64"
          },
          "mean": {
            "type": "number",
            "format": "double"
          },
          "mode": {
            "type": "integer",
            "format": "int64"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PrivacySettings": {
        "type": "object",
        "properties": {
          "chatRegex": {
            "type": "string",
            "nullable": true
          },
          "collectChat": {
            "type": "boolean"
          },
          "collectInventory": {
            "type": "boolean"
          },
          "collectTab": {
            "type": "boolean"
          },
          "collectScoreboard": {
            "type": "boolean"
          },
          "allowProxy": {
            "type": "boolean"
          },
          "collectInvClick": {
            "type": "boolean"
          },
          "collectChatClicks": {
            "type": "boolean"
          },
          "collectLobbyChanges": {
            "type": "boolean"
          },
          "collectEntities": {
            "type": "boolean"
          },
          "collectLocation": {
            "type": "boolean"
          },
          "extendDescriptions": {
            "type": "boolean"
          },
          "commandPrefixes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "autoStart": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductType": {
        "enum": [
          "NONE",
          "SERVICE",
          "COLLECTABLE",
          "TOP_UP",
          "LOCKED",
          "DISABLED",
          "VARIABLE_PRICE"
        ],
        "type": "string"
      },
      "ProfitableCraft": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "craftCost": {
            "type": "number",
            "format": "double"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            },
            "nullable": true
          },
          "reqCollection": {
            "$ref": "#/components/schemas/RequiredCollection"
          },
          "reqSlayer": {
            "$ref": "#/components/schemas/RequiredCollection"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "median": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "PropertyChange": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "effect": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PurchaseArgs": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "The service to pruchase",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "How many instances to purchase (longer time)",
            "format": "int32"
          },
          "reference": {
            "type": "string",
            "description": "Reference to prevent dupplicates",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Arguments for purchasing a service"
      },
      "ReferralInfo": {
        "type": "object",
        "properties": {
          "referedCount": {
            "type": "integer",
            "format": "int32"
          },
          "validatedMinecraft": {
            "type": "integer",
            "format": "int32"
          },
          "purchasedCoins": {
            "type": "integer",
            "format": "int32"
          },
          "referredBy": {
            "type": "string",
            "nullable": true
          },
          "oldInfo": {
            "$ref": "#/components/schemas/OldRefInfo"
          }
        },
        "additionalProperties": false
      },
      "ReferredBy": {
        "type": "object",
        "properties": {
          "refCode": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object containing referral code to give reward to"
      },
      "Reforge": {
        "enum": [
          "None",
          "Demonic",
          "Forceful",
          "Gentle",
          "Godly",
          "Hurtful",
          "Keen",
          "Strong",
          "Superior",
          "Unpleasant",
          "Zealous",
          "Odd",
          "Rich",
          "Epic",
          "Fair",
          "Fast",
          "Heroic",
          "Legendary",
          "Spicy",
          "Deadly",
          "Fine",
          "Grand",
          "Hasty",
          "Neat",
          "Papid",
          "Unreal",
          "Clean",
          "Fierce",
          "Heavy",
          "Light",
          "Mythic",
          "Pure",
          "Smart",
          "Titanic",
          "Wise",
          "Very",
          "Highly",
          "Bizarre",
          "Itchy",
          "Omnious",
          "Pleasant",
          "Pretty",
          "Shiny",
          "Simple",
          "Strange",
          "Vivid",
          "Ominous",
          "Sharp",
          "Rapid",
          "Necrotic",
          "Fabled",
          "Precise",
          "Giant",
          "aote_stone",
          "Spiritual",
          "Treacherous",
          "Renowned",
          "Reinforced",
          "rich_bow",
          "Spiked",
          "Perfect",
          "Magnetic",
          "Loving",
          "Gilded",
          "odd_sword",
          "Salty",
          "Silky",
          "Refined",
          "suspicious",
          "toil",
          "empowered",
          "fruitful",
          "blessed",
          "shaded",
          "awkward",
          "dirty",
          "undead",
          "cubic",
          "bloody",
          "moil",
          "ridiculous",
          "rich_sword",
          "warped",
          "odd_bow",
          "candied",
          "submerged",
          "ancient",
          "withered",
          "sweet",
          "fleet",
          "stellar",
          "mithraic",
          "Auspicious",
          "headstrong",
          "stiff",
          "bulky",
          "lucky",
          "bountiful",
          "heated",
          "jaded",
          "ambered",
          "double_bit",
          "excellent",
          "fortunate",
          "prospector",
          "lush",
          "sturdy",
          "lumberjack",
          "unyielding",
          "great",
          "robust",
          "rugged",
          "zooming",
          "peasant",
          "strengthened",
          "glistening",
          "waxed",
          "fortified",
          "green_thumb",
          "pitchin",
          "coldfusion",
          "Unknown",
          "Any"
        ],
        "type": "string"
      },
      "RequiredCollection": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveAuction": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "startingBid": {
            "type": "integer",
            "format": "int64"
          },
          "tag": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "auctioneerId": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "coop": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "writeOnly": true
          },
          "coopMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UuId"
            },
            "nullable": true
          },
          "highestBidAmount": {
            "type": "integer",
            "format": "int64"
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBids"
            },
            "nullable": true
          },
          "anvilUses": {
            "type": "integer",
            "format": "int32"
          },
          "enchantments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enchantment"
            },
            "nullable": true
          },
          "nbtData": {
            "$ref": "#/components/schemas/NbtData"
          },
          "itemCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reforge": {
            "$ref": "#/components/schemas/Reforge"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "tier": {
            "$ref": "#/components/schemas/Tier"
          },
          "bin": {
            "type": "boolean"
          },
          "flatNbt": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveBids": {
        "type": "object",
        "properties": {
          "bidder": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SearchResultItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "img": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "$ref": "#/components/schemas/Tier"
          }
        },
        "additionalProperties": false
      },
      "SellOrder": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerUnit": {
            "type": "number",
            "format": "double"
          },
          "orders": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SkyblockItem": {
        "type": "object",
        "properties": {
          "npcSellPrice": {
            "type": "number",
            "format": "float"
          },
          "minecraftType": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "$ref": "#/components/schemas/ItemFlags"
          },
          "tier": {
            "$ref": "#/components/schemas/Tier"
          },
          "category": {
            "$ref": "#/components/schemas/ItemCategory"
          }
        },
        "additionalProperties": false
      },
      "StorageQuickStatus": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "type": "number",
            "format": "double"
          },
          "buyVolume": {
            "type": "integer",
            "format": "int64"
          },
          "buyMovingWeek": {
            "type": "integer",
            "format": "int64"
          },
          "buyOrdersCount": {
            "type": "integer",
            "format": "int32"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "sellVolume": {
            "type": "integer",
            "format": "int64"
          },
          "sellMovingWeek": {
            "type": "integer",
            "format": "int64"
          },
          "sellOrdersCount": {
            "type": "integer",
            "format": "int32"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "buyOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuyOrder"
            },
            "nullable": true
          },
          "sellOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellOrder"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplyElement": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "Item Tag of the time",
            "nullable": true
          },
          "supply": {
            "type": "integer",
            "description": "How much supply there is on the ah",
            "format": "int64"
          },
          "median": {
            "type": "integer",
            "description": "Median sell price",
            "format": "int64"
          },
          "lbinData": {
            "$ref": "#/components/schemas/BinResponse"
          },
          "volume": {
            "type": "number",
            "description": "The average amount of sells in 24 hours",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Element for the /lowSupply page"
      },
      "Tier": {
        "enum": [
          "UNKNOWN",
          "COMMON",
          "UNCOMMON",
          "RARE",
          "EPIC",
          "LEGENDARY",
          "SPECIAL",
          "VERY_SPECIAL",
          "MYTHIC",
          "SUPREME"
        ],
        "type": "string"
      },
      "TopUpArguments": {
        "type": "object",
        "properties": {
          "coinAmount": {
            "type": "integer",
            "description": "A specific amount of coins to topup",
            "format": "int32"
          },
          "successUrl": {
            "type": "string",
            "description": "The url to redirect to after successful payment",
            "nullable": true
          },
          "cancelUrl": {
            "type": "string",
            "description": "The url to redirect to when user aborts payment",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Additional arguments for a topup"
      },
      "TopUpProduct": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProductType"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "providerSlug": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "ownershipSeconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UuId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VisibilitySettings": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "boolean"
          },
          "estProfit": {
            "type": "boolean"
          },
          "lbin": {
            "type": "boolean"
          },
          "slbin": {
            "type": "boolean"
          },
          "medPrice": {
            "type": "boolean"
          },
          "seller": {
            "type": "boolean"
          },
          "volume": {
            "type": "boolean"
          },
          "extraFields": {
            "type": "integer",
            "format": "int32"
          },
          "avgSellTime": {
            "type": "boolean"
          },
          "profitPercent": {
            "type": "boolean"
          },
          "profit": {
            "type": "boolean"
          },
          "sellerOpenBtn": {
            "type": "boolean"
          },
          "lore": {
            "type": "boolean"
          },
          "links": {
            "type": "boolean"
          },
          "copySuccessMessage": {
            "type": "boolean"
          },
          "hideSold": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Auctions",
      "description": "Endpoints for retrieving information about auctions"
    },
    {
      "name": "Bazaar",
      "description": "Main API endpoints"
    },
    {
      "name": "Crafting",
      "description": "Endpoints for crafting related data"
    },
    {
      "name": "Data",
      "description": "Endpoints for collecting data"
    },
    {
      "name": "Flip",
      "description": "Endpoints for flips"
    },
    {
      "name": "Item",
      "description": "Endpoints about items"
    },
    {
      "name": "Kat",
      "description": "Endpoints for best pet to put into kat"
    },
    {
      "name": "Mayor",
      "description": "Endpoints for mayor history data"
    },
    {
      "name": "Mod",
      "description": "Special endpoints for mods.\r\nReturns information about mod related things. e.g. available socket commands for a help text"
    },
    {
      "name": "Player",
      "description": "The playerController handles all player related endpoints."
    },
    {
      "name": "Premium",
      "description": "Endpoints for related to paid services"
    },
    {
      "name": "Prices",
      "description": "Endpoints for retrieving prices"
    },
    {
      "name": "Referral",
      "description": "Endpoints for related to paid services"
    },
    {
      "name": "Search",
      "description": "Main API endpoints"
    },
    {
      "name": "User",
      "description": "Endpoints for flips"
    }
  ]
}
