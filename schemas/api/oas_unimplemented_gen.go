// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
	"time"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// APIAuctionAuctionUuidGet implements GET /api/auction/{auctionUuid} operation.
//
// Retrieve details of a specific auction.
//
// GET /api/auction/{auctionUuid}
func (UnimplementedHandler) APIAuctionAuctionUuidGet(ctx context.Context, params APIAuctionAuctionUuidGetParams) (r *ColorSaveAuction, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionAuctionUuidUIDGet implements GET /api/auction/{auctionUuid}/uid operation.
//
// Retrieve the uid of an auction (mainly a helper to get the lookup id for another service).
//
// GET /api/auction/{auctionUuid}/uid
func (UnimplementedHandler) APIAuctionAuctionUuidUIDGet(ctx context.Context, params APIAuctionAuctionUuidUIDGetParams) (r APIAuctionAuctionUuidUIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsActiveUUIDPost implements POST /api/auctions/active/uuid operation.
//
// Checks an array of item uuids if they are active on the ah.
//
// POST /api/auctions/active/uuid
func (UnimplementedHandler) APIAuctionsActiveUUIDPost(ctx context.Context, req []string) (r []string, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsBatchGet implements GET /api/auctions/batch operation.
//
// Batch raw item value export, requires token.
//
// GET /api/auctions/batch
func (UnimplementedHandler) APIAuctionsBatchGet(ctx context.Context, params APIAuctionsBatchGetParams) error {
	return ht.ErrNotImplemented
}

// APIAuctionsSupplyLowGet implements GET /api/auctions/supply/low operation.
//
// Get items that are in low supply.
//
// GET /api/auctions/supply/low
func (UnimplementedHandler) APIAuctionsSupplyLowGet(ctx context.Context) (r []SupplyElement, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsTagItemTagActiveBinGet implements GET /api/auctions/tag/{itemTag}/active/bin operation.
//
// Get the 10 (or how many are available) lowest bins.
//
// GET /api/auctions/tag/{itemTag}/active/bin
func (UnimplementedHandler) APIAuctionsTagItemTagActiveBinGet(ctx context.Context, params APIAuctionsTagItemTagActiveBinGetParams) (r []SaveAuction, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsTagItemTagActiveOverviewGet implements GET /api/auctions/tag/{itemTag}/active/overview operation.
//
// Gets a preview of active auctions useful in overviews, available orderBy options
// HIGHEST_PRICE, LOWEST_PRICE (default), ENDING_SOON.
//
// GET /api/auctions/tag/{itemTag}/active/overview
func (UnimplementedHandler) APIAuctionsTagItemTagActiveOverviewGet(ctx context.Context, params APIAuctionsTagItemTagActiveOverviewGetParams) (r []AuctionPreview, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsTagItemTagRecentOverviewGet implements GET /api/auctions/tag/{itemTag}/recent/overview operation.
//
// Gets a preview of recent auctions useful in overviews.
//
// GET /api/auctions/tag/{itemTag}/recent/overview
func (UnimplementedHandler) APIAuctionsTagItemTagRecentOverviewGet(ctx context.Context, params APIAuctionsTagItemTagRecentOverviewGetParams) (r []AuctionPreview, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsTagItemTagSoldGet implements GET /api/auctions/tag/{itemTag}/sold operation.
//
// Get a batch of 1000 auctions that sold in the last week for any kind of processing.
// Please credit us with providing data for whatever you are doing.
// You can also manually request a review to get older data on the discord.
//
// GET /api/auctions/tag/{itemTag}/sold
func (UnimplementedHandler) APIAuctionsTagItemTagSoldGet(ctx context.Context, params APIAuctionsTagItemTagSoldGetParams) (r []SaveAuction, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsUIDUIDSoldGet implements GET /api/auctions/uid/{uid}/sold operation.
//
// Gets all recorded past sells of an item with a specific uuid
// meant for dupe detection.
//
// GET /api/auctions/uid/{uid}/sold
func (UnimplementedHandler) APIAuctionsUIDUIDSoldGet(ctx context.Context, params APIAuctionsUIDUIDSoldGetParams) (r []ItemSell, _ error) {
	return r, ht.ErrNotImplemented
}

// APIAuctionsUidsSoldPost implements POST /api/auctions/uids/sold operation.
//
// Gets all recorded past sells of a batch of items by uuid
// meant for dupe detection of whole inventories.
//
// POST /api/auctions/uids/sold
func (UnimplementedHandler) APIAuctionsUidsSoldPost(ctx context.Context, req *InventoryBatchLookup) error {
	return ht.ErrNotImplemented
}

// APIBazaarItemHistoryItemTagStatusGet implements GET /api/bazaar/item/history/{itemTag}/status operation.
//
// Returns bazaar history.
//
// Deprecated: schema marks this operation as deprecated.
//
// GET /api/bazaar/item/history/{itemTag}/status
func (UnimplementedHandler) APIBazaarItemHistoryItemTagStatusGet(ctx context.Context, params APIBazaarItemHistoryItemTagStatusGetParams) (r APIBazaarItemHistoryItemTagStatusGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIBazaarItemTagHistoryDayGet implements GET /api/bazaar/{itemTag}/history/day operation.
//
// Gets the history data for display in a graph for one day ( in intervalls of 5 minutes).
//
// GET /api/bazaar/{itemTag}/history/day
func (UnimplementedHandler) APIBazaarItemTagHistoryDayGet(ctx context.Context, params APIBazaarItemTagHistoryDayGetParams) (r []GraphResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIBazaarItemTagHistoryGet implements GET /api/bazaar/{itemTag}/history operation.
//
// Gets the history data for display in a graph.
//
// GET /api/bazaar/{itemTag}/history
func (UnimplementedHandler) APIBazaarItemTagHistoryGet(ctx context.Context, params APIBazaarItemTagHistoryGetParams) (r []GraphResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIBazaarItemTagHistoryHourGet implements GET /api/bazaar/{itemTag}/history/hour operation.
//
// Gets the history data for display in a graph for one hour ( in intervalls of 10 seconds).
//
// GET /api/bazaar/{itemTag}/history/hour
func (UnimplementedHandler) APIBazaarItemTagHistoryHourGet(ctx context.Context, params APIBazaarItemTagHistoryHourGetParams) (r []GraphResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIBazaarItemTagHistoryWeekGet implements GET /api/bazaar/{itemTag}/history/week operation.
//
// Gets the history data for display in a graph for one week ( in intervalls of 2 hours).
//
// GET /api/bazaar/{itemTag}/history/week
func (UnimplementedHandler) APIBazaarItemTagHistoryWeekGet(ctx context.Context, params APIBazaarItemTagHistoryWeekGetParams) (r []GraphResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIBazaarItemTagSnapshotGet implements GET /api/bazaar/{itemTag}/snapshot operation.
//
// Gets a snapshot of a specific item at a specific time.
//
// GET /api/bazaar/{itemTag}/snapshot
func (UnimplementedHandler) APIBazaarItemTagSnapshotGet(ctx context.Context, params APIBazaarItemTagSnapshotGetParams) (r *StorageQuickStatus, _ error) {
	return r, ht.ErrNotImplemented
}

// APICraftAPICraftGet implements GET /api/craft/api/craft operation.
//
// Returns the crafting recipe for some item.
//
// GET /api/craft/api/craft
func (UnimplementedHandler) APICraftAPICraftGet(ctx context.Context) error {
	return ht.ErrNotImplemented
}

// APICraftProfitGet implements GET /api/craft/profit operation.
//
// Craft flips.
//
// GET /api/craft/profit
func (UnimplementedHandler) APICraftProfitGet(ctx context.Context, params APICraftProfitGetParams) (r []ProfitableCraft, _ error) {
	return r, ht.ErrNotImplemented
}

// APICraftRecipeItemTagGet implements GET /api/craft/recipe/{itemTag} operation.
//
// Returns the crafting recipe for some item.
//
// GET /api/craft/recipe/{itemTag}
func (UnimplementedHandler) APICraftRecipeItemTagGet(ctx context.Context, params APICraftRecipeItemTagGetParams) error {
	return ht.ErrNotImplemented
}

// APIDataPlayerNamePost implements POST /api/data/playerName operation.
//
// Accepts player name based auction hints.
//
// POST /api/data/playerName
func (UnimplementedHandler) APIDataPlayerNamePost(ctx context.Context, params APIDataPlayerNamePostParams) (r *Int32Int64ValueTuple, _ error) {
	return r, ht.ErrNotImplemented
}

// APIDataPlayerNamesPost implements POST /api/data/playerNames operation.
//
// Accepts player name based auction hints.
//
// POST /api/data/playerNames
func (UnimplementedHandler) APIDataPlayerNamesPost(ctx context.Context, req []string) (r []Int32Int64ValueTuple, _ error) {
	return r, ht.ErrNotImplemented
}

// APIDataProxyPost implements POST /api/data/proxy operation.
//
// Endpoint to upload proxied data.
//
// POST /api/data/proxy
func (UnimplementedHandler) APIDataProxyPost(ctx context.Context) (r APIDataProxyPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFilterOptionsGet implements GET /api/filter/options operation.
//
// Returns all available filters with all available options.
//
// GET /api/filter/options
func (UnimplementedHandler) APIFilterOptionsGet(ctx context.Context, params APIFilterOptionsGetParams) (r []FilterOptions, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFilterPost implements POST /api/Filter operation.
//
// POST /api/Filter
func (UnimplementedHandler) APIFilterPost(ctx context.Context, req *FilterQuery) (r bool, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFlipSettingsOptionsGet implements GET /api/flip/settings/options operation.
//
// Shows you the available settings options for the socket comand subFlip,
// Doesn't currently actually do anything.
//
// GET /api/flip/settings/options
func (UnimplementedHandler) APIFlipSettingsOptionsGet(ctx context.Context) (r *FlipSettings, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFlipStatsFinderFinderNameGet implements GET /api/flip/stats/finder/{finderName} operation.
//
// Get flips stats for one type of flip finder.
//
// GET /api/flip/stats/finder/{finderName}
func (UnimplementedHandler) APIFlipStatsFinderFinderNameGet(ctx context.Context, params APIFlipStatsFinderFinderNameGetParams) (r []FlipDetails, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFlipStatsPlayerPlayerUuidGet implements GET /api/flip/stats/player/{playerUuid} operation.
//
// Get flips stats for player.
//
// GET /api/flip/stats/player/{playerUuid}
func (UnimplementedHandler) APIFlipStatsPlayerPlayerUuidGet(ctx context.Context, params APIFlipStatsPlayerPlayerUuidGetParams) (r *FlipSumary, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFlipStatsPlayerPlayerUuidHourGet implements GET /api/flip/stats/player/{playerUuid}/hour operation.
//
// Get flips stats for player for the last hour (faster).
//
// GET /api/flip/stats/player/{playerUuid}/hour
func (UnimplementedHandler) APIFlipStatsPlayerPlayerUuidHourGet(ctx context.Context, params APIFlipStatsPlayerPlayerUuidHourGetParams) (r *FlipSumary, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFlipTrackFoundAuctionIdPost implements POST /api/flip/track/found/{auctionId} operation.
//
// Callback for external flip finders to be included in tracking.
//
// POST /api/flip/track/found/{auctionId}
func (UnimplementedHandler) APIFlipTrackFoundAuctionIdPost(ctx context.Context, params APIFlipTrackFoundAuctionIdPostParams) error {
	return ht.ErrNotImplemented
}

// APIFlipTrackPurchaseAuctionIdPost implements POST /api/flip/track/purchase/{auctionId} operation.
//
// Callback for external flip finders to be included in tracking.
//
// POST /api/flip/track/purchase/{auctionId}
func (UnimplementedHandler) APIFlipTrackPurchaseAuctionIdPost(ctx context.Context, params APIFlipTrackPurchaseAuctionIdPostParams) error {
	return ht.ErrNotImplemented
}

// APIFlipUpdateWhenGet implements GET /api/flip/update/when operation.
//
// The last time an update was loaded (cached for 30min)
// You should only look at the second part.
//
// GET /api/flip/update/when
func (UnimplementedHandler) APIFlipUpdateWhenGet(ctx context.Context) (r time.Time, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemItemTagDetailsGet implements GET /api/item/{itemTag}/details operation.
//
// Returns details about a specific item
// This gets updated once every hour.
//
// GET /api/item/{itemTag}/details
func (UnimplementedHandler) APIItemItemTagDetailsGet(ctx context.Context, params APIItemItemTagDetailsGetParams) (r *SkyblockItem, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemItemTagSimilarGet implements GET /api/item/{itemTag}/similar operation.
//
// Other items related to some tag.
//
// GET /api/item/{itemTag}/similar
func (UnimplementedHandler) APIItemItemTagSimilarGet(ctx context.Context, params APIItemItemTagSimilarGetParams) (r []ItemPreview, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagBinGet implements GET /api/item/price/{itemTag}/bin operation.
//
// Gets the lowest bin by item type.
//
// GET /api/item/price/{itemTag}/bin
func (UnimplementedHandler) APIItemPriceItemTagBinGet(ctx context.Context, params APIItemPriceItemTagBinGetParams) (r *BinResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagCurrentGet implements GET /api/item/price/{itemTag}/current operation.
//
// Gets the current (latest known) price for an item and available quantity, supports items from
// bazaar and ah.
//
// GET /api/item/price/{itemTag}/current
func (UnimplementedHandler) APIItemPriceItemTagCurrentGet(ctx context.Context, params APIItemPriceItemTagCurrentGetParams) (r *CurrentPrice, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagGet implements GET /api/item/price/{itemTag} operation.
//
// Aggregated sumary of item prices for the 3 last days.
//
// GET /api/item/price/{itemTag}
func (UnimplementedHandler) APIItemPriceItemTagGet(ctx context.Context, params APIItemPriceItemTagGetParams) (r *PriceSumary, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagHistoryDayGet implements GET /api/item/price/{itemTag}/history/day operation.
//
// Gets the price history for an item for the last 24 hours.
//
// GET /api/item/price/{itemTag}/history/day
func (UnimplementedHandler) APIItemPriceItemTagHistoryDayGet(ctx context.Context, params APIItemPriceItemTagHistoryDayGetParams) (r []AveragePrice, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagHistoryFullGet implements GET /api/item/price/{itemTag}/history/full operation.
//
// Gets the price history for an item for all time.
//
// GET /api/item/price/{itemTag}/history/full
func (UnimplementedHandler) APIItemPriceItemTagHistoryFullGet(ctx context.Context, params APIItemPriceItemTagHistoryFullGetParams) (r []AveragePrice, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagHistoryMonthGet implements GET /api/item/price/{itemTag}/history/month operation.
//
// Gets the price history for an item for one month.
//
// GET /api/item/price/{itemTag}/history/month
func (UnimplementedHandler) APIItemPriceItemTagHistoryMonthGet(ctx context.Context, params APIItemPriceItemTagHistoryMonthGetParams) (r []AveragePrice, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemPriceItemTagHistoryWeekGet implements GET /api/item/price/{itemTag}/history/week operation.
//
// Gets the price history for an item for the last 7 days.
//
// GET /api/item/price/{itemTag}/history/week
func (UnimplementedHandler) APIItemPriceItemTagHistoryWeekGet(ctx context.Context, params APIItemPriceItemTagHistoryWeekGetParams) (r []AveragePrice, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemSearchSearchValGet implements GET /api/item/search/{searchVal} operation.
//
// Searches through all items, includes the rarity of items.
//
// GET /api/item/search/{searchVal}
func (UnimplementedHandler) APIItemSearchSearchValGet(ctx context.Context, params APIItemSearchSearchValGetParams) (r []SearchResultItem, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemsBazaarTagsGet implements GET /api/items/bazaar/tags operation.
//
// A list of item tags (hypixel ids) that are tradeable on bazaar
// This gets updated once every hour.
//
// GET /api/items/bazaar/tags
func (UnimplementedHandler) APIItemsBazaarTagsGet(ctx context.Context) (r []string, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemsGet implements GET /api/items operation.
//
// Get all item tags, names and wherever they are on ah or bazaar.
//
// GET /api/items
func (UnimplementedHandler) APIItemsGet(ctx context.Context) (r []ItemMetadataElement, _ error) {
	return r, ht.ErrNotImplemented
}

// APIItemsNamesPost implements POST /api/items/names operation.
//
// Batch lookup names for item tags.
//
// POST /api/items/names
func (UnimplementedHandler) APIItemsNamesPost(ctx context.Context, req []string) error {
	return ht.ErrNotImplemented
}

// APIKatDataGet implements GET /api/kat/data operation.
//
// Raw data of upgrade cost.
//
// GET /api/kat/data
func (UnimplementedHandler) APIKatDataGet(ctx context.Context) (r []KatUpgradeCost, _ error) {
	return r, ht.ErrNotImplemented
}

// APIKatProfitGet implements GET /api/kat/profit operation.
//
// Kat flips.
//
// GET /api/kat/profit
func (UnimplementedHandler) APIKatProfitGet(ctx context.Context) (r []KatFlip, _ error) {
	return r, ht.ErrNotImplemented
}

// APIMayorGet implements GET /api/mayor operation.
//
// Gets election data between two Timestamps.
//
// GET /api/mayor
func (UnimplementedHandler) APIMayorGet(ctx context.Context, params APIMayorGetParams) (r []ModelElectionPeriod, _ error) {
	return r, ht.ErrNotImplemented
}

// APIMayorYearGet implements GET /api/mayor/{year} operation.
//
// Return Election results for a specific year.
//
// GET /api/mayor/{year}
func (UnimplementedHandler) APIMayorYearGet(ctx context.Context, params APIMayorYearGetParams) (r *ModelElectionPeriod, _ error) {
	return r, ht.ErrNotImplemented
}

// APIModCommandsGet implements GET /api/mod/commands operation.
//
// Returns a list of available server-side commands.
//
// GET /api/mod/commands
func (UnimplementedHandler) APIModCommandsGet(ctx context.Context) (r []CommandListEntry, _ error) {
	return r, ht.ErrNotImplemented
}

// APIModDescriptionModificationsPost implements POST /api/mod/description/modifications operation.
//
// Returns a collection of modifications for each item passed.
//
// POST /api/mod/description/modifications
func (UnimplementedHandler) APIModDescriptionModificationsPost(ctx context.Context, req *InventoryData, params APIModDescriptionModificationsPostParams) (r APIModDescriptionModificationsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIModDescriptionPost implements POST /api/mod/description operation.
//
// Returns new descriptions for an array of items.
//
// POST /api/mod/description
func (UnimplementedHandler) APIModDescriptionPost(ctx context.Context, req *InventoryData, params APIModDescriptionPostParams) (r APIModDescriptionPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIModItemUUIDGet implements GET /api/mod/item/{uuid} operation.
//
// Returns extra information for an item.
//
// GET /api/mod/item/{uuid}
func (UnimplementedHandler) APIModItemUUIDGet(ctx context.Context, params APIModItemUUIDGetParams) (r APIModItemUUIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIPlayerPlayerUuidAuctionsGet implements GET /api/player/{playerUuid}/auctions operation.
//
// The last 10 auctions a player created.
//
// GET /api/player/{playerUuid}/auctions
func (UnimplementedHandler) APIPlayerPlayerUuidAuctionsGet(ctx context.Context, params APIPlayerPlayerUuidAuctionsGetParams) (r []AuctionResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIPlayerPlayerUuidBidsGet implements GET /api/player/{playerUuid}/bids operation.
//
// The last 10 bids (with auction) a player did.
//
// GET /api/player/{playerUuid}/bids
func (UnimplementedHandler) APIPlayerPlayerUuidBidsGet(ctx context.Context, params APIPlayerPlayerUuidBidsGetParams) (r []BidResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APIPlayerPlayerUuidNameGet implements GET /api/player/{playerUuid}/name operation.
//
// The name for a given uuid.
//
// GET /api/player/{playerUuid}/name
func (UnimplementedHandler) APIPlayerPlayerUuidNameGet(ctx context.Context, params APIPlayerPlayerUuidNameGetParams) (r APIPlayerPlayerUuidNameGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIPlayerPlayerUuidNamePost implements POST /api/player/{playerUuid}/name operation.
//
// The name for a given uuid.
//
// POST /api/player/{playerUuid}/name
func (UnimplementedHandler) APIPlayerPlayerUuidNamePost(ctx context.Context, params APIPlayerPlayerUuidNamePostParams) (r APIPlayerPlayerUuidNamePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIPremiumPricesAdjustedPost implements POST /api/premium/prices/adjusted operation.
//
// Get adjusted prices.
//
// POST /api/premium/prices/adjusted
func (UnimplementedHandler) APIPremiumPricesAdjustedPost(ctx context.Context, req []string) error {
	return ht.ErrNotImplemented
}

// APIPremiumUserOwnsPost implements POST /api/premium/user/owns operation.
//
// Get adjusted prices.
//
// POST /api/premium/user/owns
func (UnimplementedHandler) APIPremiumUserOwnsPost(ctx context.Context, req []string) error {
	return ht.ErrNotImplemented
}

// APIPriceNbtPost implements POST /api/price/nbt operation.
//
// Returns price estimations for nbt data (for in game mods)
// NOTE: THIS WILL BE A PAID FEATURE IN THE FUTURE.
//
// POST /api/price/nbt
func (UnimplementedHandler) APIPriceNbtPost(ctx context.Context, req *InventoryData) (r []PriceEstimate, _ error) {
	return r, ht.ErrNotImplemented
}

// APIReferralInfoGet implements GET /api/referral/info operation.
//
// Returns ReferralCode and statistics for the user.
//
// GET /api/referral/info
func (UnimplementedHandler) APIReferralInfoGet(ctx context.Context) (r *ReferralInfo, _ error) {
	return r, ht.ErrNotImplemented
}

// APIReferralReferredByPost implements POST /api/referral/referred/by operation.
//
// Tells the backend that the user was referred by someone.
//
// POST /api/referral/referred/by
func (UnimplementedHandler) APIReferralReferredByPost(ctx context.Context, req *ReferredBy) error {
	return ht.ErrNotImplemented
}

// APISearchPlayerPlayerNameGet implements GET /api/search/player/{playerName} operation.
//
// Search player.
//
// GET /api/search/player/{playerName}
func (UnimplementedHandler) APISearchPlayerPlayerNameGet(ctx context.Context, params APISearchPlayerPlayerNameGetParams) (r []PlayerResult, _ error) {
	return r, ht.ErrNotImplemented
}

// APISearchSearchValGet implements GET /api/search/{searchVal} operation.
//
// Full search, includes item types, items (by uuid), players, auctions and enchantments.
//
// GET /api/search/{searchVal}
func (UnimplementedHandler) APISearchSearchValGet(ctx context.Context, params APISearchSearchValGetParams) (r []SearchResultItem, _ error) {
	return r, ht.ErrNotImplemented
}

// APIServicePurchasePost implements POST /api/service/purchase operation.
//
// Purchase a service.
//
// POST /api/service/purchase
func (UnimplementedHandler) APIServicePurchasePost(ctx context.Context, req *PurchaseArgs) error {
	return ht.ErrNotImplemented
}

// APITopupOptionsGet implements GET /api/topup/options operation.
//
// Products to top up.
//
// GET /api/topup/options
func (UnimplementedHandler) APITopupOptionsGet(ctx context.Context) (r []TopUpProduct, _ error) {
	return r, ht.ErrNotImplemented
}

// APITopupPaypalProductSlugPost implements POST /api/topup/paypal/{productSlug} operation.
//
// Start a new topup session with paypal.
//
// POST /api/topup/paypal/{productSlug}
func (UnimplementedHandler) APITopupPaypalProductSlugPost(ctx context.Context, req *TopUpArguments, params APITopupPaypalProductSlugPostParams) error {
	return ht.ErrNotImplemented
}

// APITopupStripeProductSlugPost implements POST /api/topup/stripe/{productSlug} operation.
//
// Start a new topup session with stripe.
//
// POST /api/topup/stripe/{productSlug}
func (UnimplementedHandler) APITopupStripeProductSlugPost(ctx context.Context, req *TopUpArguments, params APITopupStripeProductSlugPostParams) error {
	return ht.ErrNotImplemented
}

// APIUserPrivacyGet implements GET /api/user/privacy operation.
//
// Get the users privacy settings (requires google token).
//
// GET /api/user/privacy
func (UnimplementedHandler) APIUserPrivacyGet(ctx context.Context) (r *PrivacySettings, _ error) {
	return r, ht.ErrNotImplemented
}

// APIUserPrivacyPost implements POST /api/user/privacy operation.
//
// Update users privacy settings (requires google token).
//
// POST /api/user/privacy
func (UnimplementedHandler) APIUserPrivacyPost(ctx context.Context, req *PrivacySettings) error {
	return ht.ErrNotImplemented
}
