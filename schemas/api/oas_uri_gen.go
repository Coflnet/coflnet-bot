// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/uri"
)

// EncodeURI encodes APIAuctionsTagItemTagActiveBinGetQuery as URI form.
func (s *APIAuctionsTagItemTagActiveBinGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIAuctionsTagItemTagActiveBinGetQuery = [0]string{}

// DecodeURI decodes APIAuctionsTagItemTagActiveBinGetQuery from URI form.
func (s *APIAuctionsTagItemTagActiveBinGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIAuctionsTagItemTagActiveBinGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIAuctionsTagItemTagActiveBinGetQuery")
	}

	return nil
}

// EncodeURI encodes APIAuctionsTagItemTagActiveOverviewGetQuery as URI form.
func (s *APIAuctionsTagItemTagActiveOverviewGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIAuctionsTagItemTagActiveOverviewGetQuery = [0]string{}

// DecodeURI decodes APIAuctionsTagItemTagActiveOverviewGetQuery from URI form.
func (s *APIAuctionsTagItemTagActiveOverviewGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIAuctionsTagItemTagActiveOverviewGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIAuctionsTagItemTagActiveOverviewGetQuery")
	}

	return nil
}

// EncodeURI encodes APIAuctionsTagItemTagRecentOverviewGetQuery as URI form.
func (s *APIAuctionsTagItemTagRecentOverviewGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIAuctionsTagItemTagRecentOverviewGetQuery = [0]string{}

// DecodeURI decodes APIAuctionsTagItemTagRecentOverviewGetQuery from URI form.
func (s *APIAuctionsTagItemTagRecentOverviewGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIAuctionsTagItemTagRecentOverviewGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIAuctionsTagItemTagRecentOverviewGetQuery")
	}

	return nil
}

// EncodeURI encodes APIItemPriceItemTagBinGetQuery as URI form.
func (s *APIItemPriceItemTagBinGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIItemPriceItemTagBinGetQuery = [0]string{}

// DecodeURI decodes APIItemPriceItemTagBinGetQuery from URI form.
func (s *APIItemPriceItemTagBinGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIItemPriceItemTagBinGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIItemPriceItemTagBinGetQuery")
	}

	return nil
}

// EncodeURI encodes APIItemPriceItemTagGetQuery as URI form.
func (s *APIItemPriceItemTagGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIItemPriceItemTagGetQuery = [0]string{}

// DecodeURI decodes APIItemPriceItemTagGetQuery from URI form.
func (s *APIItemPriceItemTagGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIItemPriceItemTagGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIItemPriceItemTagGetQuery")
	}

	return nil
}

// EncodeURI encodes APIItemPriceItemTagHistoryDayGetQuery as URI form.
func (s *APIItemPriceItemTagHistoryDayGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIItemPriceItemTagHistoryDayGetQuery = [0]string{}

// DecodeURI decodes APIItemPriceItemTagHistoryDayGetQuery from URI form.
func (s *APIItemPriceItemTagHistoryDayGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIItemPriceItemTagHistoryDayGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIItemPriceItemTagHistoryDayGetQuery")
	}

	return nil
}

// EncodeURI encodes APIItemPriceItemTagHistoryMonthGetQuery as URI form.
func (s *APIItemPriceItemTagHistoryMonthGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIItemPriceItemTagHistoryMonthGetQuery = [0]string{}

// DecodeURI decodes APIItemPriceItemTagHistoryMonthGetQuery from URI form.
func (s *APIItemPriceItemTagHistoryMonthGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIItemPriceItemTagHistoryMonthGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIItemPriceItemTagHistoryMonthGetQuery")
	}

	return nil
}

// EncodeURI encodes APIItemPriceItemTagHistoryWeekGetQuery as URI form.
func (s *APIItemPriceItemTagHistoryWeekGetQuery) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIItemPriceItemTagHistoryWeekGetQuery = [0]string{}

// DecodeURI decodes APIItemPriceItemTagHistoryWeekGetQuery from URI form.
func (s *APIItemPriceItemTagHistoryWeekGetQuery) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIItemPriceItemTagHistoryWeekGetQuery to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIItemPriceItemTagHistoryWeekGetQuery")
	}

	return nil
}

// EncodeURI encodes APIPlayerPlayerUuidAuctionsGetFilters as URI form.
func (s *APIPlayerPlayerUuidAuctionsGetFilters) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIPlayerPlayerUuidAuctionsGetFilters = [0]string{}

// DecodeURI decodes APIPlayerPlayerUuidAuctionsGetFilters from URI form.
func (s *APIPlayerPlayerUuidAuctionsGetFilters) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIPlayerPlayerUuidAuctionsGetFilters to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIPlayerPlayerUuidAuctionsGetFilters")
	}

	return nil
}

// EncodeURI encodes APIPlayerPlayerUuidBidsGetFilters as URI form.
func (s *APIPlayerPlayerUuidBidsGetFilters) EncodeURI(e uri.Encoder) error {
	return nil
}

var uriFieldsNameOfAPIPlayerPlayerUuidBidsGetFilters = [0]string{}

// DecodeURI decodes APIPlayerPlayerUuidBidsGetFilters from URI form.
func (s *APIPlayerPlayerUuidBidsGetFilters) DecodeURI(d uri.Decoder) error {
	if s == nil {
		return errors.New("invalid: unable to decode APIPlayerPlayerUuidBidsGetFilters to nil")
	}

	if err := d.DecodeFields(func(k string, d uri.Decoder) error {
		switch k {
		default:
			return nil
		}
		return nil
	}); err != nil {
		return errors.Wrap(err, "decode APIPlayerPlayerUuidBidsGetFilters")
	}

	return nil
}
