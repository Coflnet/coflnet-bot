// Code generated by ogen, DO NOT EDIT.

package mc_connect

import (
	"time"
)

// ConnectUserUserIdVerifyPostOK is response for ConnectUserUserIdVerifyPost operation.
type ConnectUserUserIdVerifyPostOK struct{}

// Ref: #/components/schemas/ConnectionRequest
type ConnectionRequest struct {
	Code        OptInt32 `json:"code"`
	IsConnected OptBool  `json:"isConnected"`
}

// GetCode returns the value of Code.
func (s *ConnectionRequest) GetCode() OptInt32 {
	return s.Code
}

// GetIsConnected returns the value of IsConnected.
func (s *ConnectionRequest) GetIsConnected() OptBool {
	return s.IsConnected
}

// SetCode sets the value of Code.
func (s *ConnectionRequest) SetCode(val OptInt32) {
	s.Code = val
}

// SetIsConnected sets the value of IsConnected.
func (s *ConnectionRequest) SetIsConnected(val OptBool) {
	s.IsConnected = val
}

// Ref: #/components/schemas/MinecraftUuid
type MinecraftUuid struct {
	ID              OptInt32     `json:"id"`
	AccountUuid     OptNilString `json:"accountUuid"`
	Verified        OptBool      `json:"verified"`
	User            OptUser      `json:"user"`
	UpdatedAt       OptDateTime  `json:"updatedAt"`
	CreatedAt       OptDateTime  `json:"createdAt"`
	LastRequestedAt OptDateTime  `json:"lastRequestedAt"`
}

// GetID returns the value of ID.
func (s *MinecraftUuid) GetID() OptInt32 {
	return s.ID
}

// GetAccountUuid returns the value of AccountUuid.
func (s *MinecraftUuid) GetAccountUuid() OptNilString {
	return s.AccountUuid
}

// GetVerified returns the value of Verified.
func (s *MinecraftUuid) GetVerified() OptBool {
	return s.Verified
}

// GetUser returns the value of User.
func (s *MinecraftUuid) GetUser() OptUser {
	return s.User
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MinecraftUuid) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MinecraftUuid) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetLastRequestedAt returns the value of LastRequestedAt.
func (s *MinecraftUuid) GetLastRequestedAt() OptDateTime {
	return s.LastRequestedAt
}

// SetID sets the value of ID.
func (s *MinecraftUuid) SetID(val OptInt32) {
	s.ID = val
}

// SetAccountUuid sets the value of AccountUuid.
func (s *MinecraftUuid) SetAccountUuid(val OptNilString) {
	s.AccountUuid = val
}

// SetVerified sets the value of Verified.
func (s *MinecraftUuid) SetVerified(val OptBool) {
	s.Verified = val
}

// SetUser sets the value of User.
func (s *MinecraftUuid) SetUser(val OptUser) {
	s.User = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MinecraftUuid) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MinecraftUuid) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetLastRequestedAt sets the value of LastRequestedAt.
func (s *MinecraftUuid) SetLastRequestedAt(val OptDateTime) {
	s.LastRequestedAt = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMinecraftUuidArray returns new OptNilMinecraftUuidArray with value set to v.
func NewOptNilMinecraftUuidArray(v []MinecraftUuid) OptNilMinecraftUuidArray {
	return OptNilMinecraftUuidArray{
		Value: v,
		Set:   true,
	}
}

// OptNilMinecraftUuidArray is optional nullable []MinecraftUuid.
type OptNilMinecraftUuidArray struct {
	Value []MinecraftUuid
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMinecraftUuidArray was set.
func (o OptNilMinecraftUuidArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMinecraftUuidArray) Reset() {
	var v []MinecraftUuid
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMinecraftUuidArray) SetTo(v []MinecraftUuid) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMinecraftUuidArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMinecraftUuidArray) Get() (v []MinecraftUuid, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMinecraftUuidArray) Or(d []MinecraftUuid) []MinecraftUuid {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUser returns new OptUser with value set to v.
func NewOptUser(v User) OptUser {
	return OptUser{
		Value: v,
		Set:   true,
	}
}

// OptUser is optional User.
type OptUser struct {
	Value User
	Set   bool
}

// IsSet returns true if OptUser was set.
func (o OptUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUser) Reset() {
	var v User
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUser) SetTo(v User) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUser) Get() (v User, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUser) Or(d User) User {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/User
type User struct {
	ID OptInt32 `json:"id"`
	// The identifier of the account system.
	ExternalId OptNilString `json:"externalId"`
	// Accounts connected to this user.
	Accounts OptNilMinecraftUuidArray `json:"accounts"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptInt32 {
	return s.ID
}

// GetExternalId returns the value of ExternalId.
func (s *User) GetExternalId() OptNilString {
	return s.ExternalId
}

// GetAccounts returns the value of Accounts.
func (s *User) GetAccounts() OptNilMinecraftUuidArray {
	return s.Accounts
}

// SetID sets the value of ID.
func (s *User) SetID(val OptInt32) {
	s.ID = val
}

// SetExternalId sets the value of ExternalId.
func (s *User) SetExternalId(val OptNilString) {
	s.ExternalId = val
}

// SetAccounts sets the value of Accounts.
func (s *User) SetAccounts(val OptNilMinecraftUuidArray) {
	s.Accounts = val
}
